# Bachelors Mess Manager - Full Project Specification for VS Code Copilot Agent

## ðŸ“Œ Project Goal
Build a mobile application using React Native (Expo) to manage meals and contributions in a shared mess environment.
Users include:
- **Admin**: manages members and approvals.
- **Member**: submits meals and bazar details.

## ðŸ‘¤ Roles & Features

### Admin:
- Register/Login (JWT Auth)
- Add/Edit/Delete Members
- Approve Daily Meal Entries
- View Monthly Summary
- Review Bazar Submissions

### Member:
- Register/Login
- Submit Daily Meals (breakfast, lunch, dinner)
- Upload files (images/docs) for Bazar
- View personal dashboard

## ðŸ§° Tech Stack

### Frontend (Expo):
- React Native (Expo)
- React Navigation
- Redux Toolkit or Context API
- Axios for API requests
- Tailwind-RN or NativeWind for styling
- Expo DocumentPicker / ImagePicker

### Backend (Node.js + Express):
- Express.js for REST API
- MongoDB + Mongoose for data storage
- JWT for Authentication
- Multer for file upload
- Cloudinary for file storage
- dotenv for environment variables
- CORS for cross-origin support

## ðŸ—‚ Folder Structure

### Client (Expo App):
```
/bachelor-mess-client
â”œâ”€â”€ /components
â”œâ”€â”€ /screens
â”œâ”€â”€ /redux or /context
â”œâ”€â”€ /assets
â”œâ”€â”€ /services (axios)
â””â”€â”€ App.js
```

### Server (Express App):
```
/bachelor-mess-server
â”œâ”€â”€ /controllers
â”œâ”€â”€ /models
â”œâ”€â”€ /routes
â”œâ”€â”€ /middleware
â”œâ”€â”€ /utils
â””â”€â”€ server.js
```

## ðŸ“¦ Dependencies

### Frontend (Expo):
- expo
- react
- react-native
- react-navigation
- @react-navigation/native
- @react-navigation/stack
- axios
- tailwind-rn
- react-native-dotenv
- expo-document-picker
- expo-image-picker

### Backend (Node.js):
- express
- mongoose
- jsonwebtoken
- multer
- cloudinary
- cors
- dotenv
- morgan
- winston

## ðŸš€ MVP Development Plan

### Phase 1: Setup
- Initialize Expo and Express apps
- Setup MongoDB Atlas connection

### Phase 2: Auth System
- Implement JWT Login/Register for Admin/Member
- Protect routes using role middleware

### Phase 3: Member Features
- Submit meal entries
- Upload bazar lists with file/image
- View personal dashboard

### Phase 4: Admin Features
- Manage Members (CRUD)
- Approve meals
- View bazar submissions

### Phase 5: Deployment
- Deploy backend to Render or Railway
- Use Expo EAS to build and deploy mobile app

## ðŸ“ˆ Future Features (Post-MVP)
- Push Notifications
- Meal Statistics & Summarization
- Monthly Bill Split & Payments